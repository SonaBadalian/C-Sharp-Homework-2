using System;

class qQueens
{
    static int boardSize = 8; 
    static int[,] chessboard = new int[boardSize, boardSize];

    static void Main()
    {
        Console.WriteLine("Enter the initial position for the first queen:");

        Console.Write("Row (0-7): ");
        int initialRow = int.Parse(Console.ReadLine());

        Console.Write("Column (0-7): ");
        int initialCol = int.Parse(Console.ReadLine());

        if (PlaceQueen(initialRow, initialCol, 1))
        {
            Console.WriteLine("Here is one of the solutions");
            PrintChessboard();
        }
        else
        {
            Console.WriteLine("No solution found.");
        }
    }

    static bool PlaceQueen(int row, int col, int queensPlaced)
    {
        if (queensPlaced == boardSize)
        {
            return true;
        }

        if (!IsUnderAttack(row, col))
        {
            chessboard[row, col] = 1;

            for (int nextRow = 0; nextRow < boardSize; nextRow++)
            {
                for (int nextCol = 0; nextCol < boardSize; nextCol++)
                {
                    if (PlaceQueen(nextRow, nextCol, queensPlaced + 1))
                    {
                        return true;
                    }
                }
            }

            chessboard[row, col] = 0;
        }

        return false;
    }

    static bool IsUnderAttack(int row, int col)
    {
        for (int i = 0; i < boardSize; i++)
        {
            if (chessboard[row, i] == 1 || chessboard[i, col] == 1)
            {
                return true;
            }
        }
        
        for (int i = row, j = col; i >= 0 && j >= 0; i--, j--)
        {
            if (chessboard[i, j] == 1)
            {
                return true;
            }
        }

        for (int i = row, j = col; i < boardSize && j >= 0; i++, j--)
        {
            if (chessboard[i, j] == 1)
            {
                return true;
            }
        }

        return false;
    }

    static void PrintChessboard()
    {
        for (int i = 0; i < boardSize; i++)
        {
            for (int j = 0; j < boardSize; j++)
            {
                Console.Write(chessboard[i, j] + " ");
            }
            Console.WriteLine();
        }
    }
}
